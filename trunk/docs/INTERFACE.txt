##### SERVER

- registerGUI(address, port):message		// max. 3 sec. auf die Antwort warten
- register(accountid)
- unregister(accountid)
- makeCall(accountid, callee):callid		// callee kann mit oder ohne "@" sein
- endCall(callid)
- acceptCall(callid)
- setSpeakerVolume(level)			// level: zwischen 0 und 1, Prozentwert
- getSpeakerVolume(): level
- setMicroVolume(level)
- getMicroVolume(): level
- sendDtmf(char, callid)

------------------
Account

- id	
- name		set/get			// Name des Accounts				opt.
- username	set/get			// z.Bsp. "uli" bei uli@iptel.org
- domain				// z.Bsp. "iptel.org" bei uli@iptel.org
- authusername										opt.
- password	set/get
- displayname										opt.	
- outboundproxy										opt.
- registrar										opt.
- autoregister				// will man sich registrieren			opt.


- accountSet(id, attribute, value)		// attribute: z. B. username oder domain aber nicht id, value: Wert
- accountGet(id, attribute): value
- accountGetAll: <array> 		// liefert Liste von bekannten ID's
- accountCreate: id
- accountDelete(id)
------------------









##### CLIENT 


- changeRegStatus(id, boolean)					// teilt mit, ob eine Registrierung erfolgreich ist
- changeCallStatus(callid, status)							
- showUserEvent(accountid, category, title, message, detailmessage)	// 
- registerCore								// 
- incomingCall(accountid, callid, callerSipUri, callerDisplayName)
- setSpeakerVolume(level)
- setMicroVolume(level)


---------------------------------------

- Einstellungen - wo speichern ? (im Core)
- ChangeCallStatus kann viel schneller zurück kommen, als ein graphisches Objekt erzeugt wird
- Anruf halten, weiterleiten, Konferenz




----------------

UseCases:

- starten mit Anmeldung (Kommunikation zwischen GUI und Core)
- Accounteinstellungen bearbeiten
- Anruf durchführen
	- der Angerufene nimmt an
	- der Angerufene lehnt ab
- angerufen werden
	- annehmen / ablehnen
