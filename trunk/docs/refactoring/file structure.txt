trunk/core/
===========

accounts/
	account_client_interface.h
	account_core_interface.h
	account_management.c
	list.c
	list.h
config/
	xml/
		core_config.dtd
		core_config.xml
core/
	callIDs/
		call_id_generator.c
		call_id_generator.h
	events/
		event_dispatcher.c
		event_dispatcher.h
		events.h
		statemachine.c
		statemachine.h
	gui_input
		accounts_receiver.c
		accounts_receiver.h
		calls_receiver.c
		calls_receiver.h
		extras_receiver.c
		extras_receiver.h
		registration_receiver.c
		registration_receiver.h
		volume_receiver.c
		volume_receiver.h
	gui_output
		gui_callback_sender.c
		gui_callback_sender.h
			
lib/
	genx/
		genx.h
		libgenx.a
remote/
	callback/
		xmlrpc/
			gui_callback.c
			xmlrpc_callback_client.c
			xmlrpc_callback_client.h
		gui_callback.h
	server/
		xmlrpc/
			accounts_remote.c
			accounts_remote.h
			calls_remote.c
			calls_remote.h
			extras_remote.c
			extras_remote.h
			registration_remote.c
			registration_remote.h
			volume_remote.c
			volume_remote.h
			xmlrpc_server.c
			xmlrpc_server.h
		accounts.c
		accounts.h
		calls.c
		calls.h
		extras.c
		extras.h
		registration.c
		registration.h
		volume.c
		volume.h
sipstack/
	eXosip/
		osip_adapter.c
		...
	sip_listener_interface.h
	sip_stack_interface.h
tests/
util/
	config/
		xml/
			config_reader.c
			config_reader.h
			config_writer.c
			config_writer.h
		globals.h
	logging/
		simple/
			logger.c
		logger.h	
	queue/
		queue.c
		queue.h
	threads/
		thread_management.c
		thread_management.h
		tm_storage.h
